---
import type { CollectionEntry } from "astro:content";
import PostPreview from "@/components/blog/PostPreview.astro";
import FilterTags from "@/components/blog/FilterTags.astro";
import { getAllPosts, groupPostsByYear, sortMDByDate } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import Intro from "@/components/layout/Intro.astro";

export const getStaticPaths = async () => {
	const [enPosts, koPosts] = await Promise.all([getAllPosts("en"), getAllPosts("ko")]);

	return [
		{
			params: { lang: undefined },
			props: { posts: sortMDByDate(enPosts) },
		},
		{
			params: { lang: "ko" },
			props: { posts: sortMDByDate(koPosts) },
		},
	];
};

interface Props {
	posts: Array<CollectionEntry<"post">>;
}

const { posts } = Astro.props;
const meta = {
	description: "Read my collection of posts and the things that interest me",
	title: "Posts",
	type: "posts",
};

const groupedByYear = groupPostsByYear(posts);
const descYearKeys = Object.keys(groupedByYear).sort((a, b) => +b - +a);
const lang = getLangFromUrl(Astro.url) || "en";
const t = useTranslations(lang);
---

<PageLayout meta={meta}>
	<Intro title={t("posts.title")}>
		<div slot="description">
			<FilterTags lang={lang} t={t} />
		</div>
	</Intro>
	<div class="mb-16 mt-8">
		<section class="posts-list group/total relative" aria-label="Blog post list">
			{
				descYearKeys.map((yearKey) => (
					<div class="year-tag">
						<div class="h-px w-full bg-border" />
						<div
							class="year-group group/years flex w-full flex-col last-of-type:mb-0 sm:flex-row sm:space-x-10"
							data-year={yearKey}
						>
							<div class="year-label z-10 mb-0 mt-4 rounded-md sm:my-6 sm:mb-0">
								<span class="mt-3 inline-block rounded-md font-serif text-lg font-medium transition-all duration-200 ease-in-out group-hover/years:bg-muted group-hover/total:opacity-40 group-hover/years:!opacity-100 sm:mt-0 sm:px-2">
									{yearKey}
								</span>
							</div>
							<ul class="my-6 w-full text-start">
								{groupedByYear[yearKey]?.map((p) => (
									<li
										class="my-8 transition-all duration-200 ease-in-out first:mt-0 last:mb-0 hover:!opacity-100 group-hover/total:opacity-40"
										data-year={yearKey}
									>
										<PostPreview post={p} />
									</li>
								))}
							</ul>
						</div>
					</div>
				))
			}
		</section>
	</div>
</PageLayout>
<script src="../../../scripts/transitions.ts"></script>
