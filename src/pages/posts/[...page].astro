---
import type { CollectionEntry } from "astro:content";
import Pagination from "@/components/Paginator.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import { getAllPosts, getUniqueTags, groupPostsByYear, sortMDByDate } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import type { GetStaticPaths, Page } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
  const MAX_POSTS_PER_PAGE = 10;
  const allPosts = await getAllPosts();
  const allPostsByDate = sortMDByDate(allPosts);
  const uniqueTags = getUniqueTags(allPosts);
  return paginate(allPostsByDate, { pageSize: MAX_POSTS_PER_PAGE, props: { uniqueTags } });
}) satisfies GetStaticPaths;

interface Props {
  page: Page<CollectionEntry<"post">>;
  uniqueTags: string[];
}

const { page, uniqueTags } = Astro.props;

const meta = {
  description: "Read my collection of posts and the things that interest me",
  title: "Posts",
  type: "posts"
};

const paginationProps = {
  ...(page.url.prev && {
    prevUrl: {
      text: "Previous",
      url: page.url.prev,
    },
  }),
  ...(page.url.next && {
    nextUrl: {
      text: "Next",
      url: page.url.next,
    },
  }),
};
const groupedByYear = groupPostsByYear(page.data);
const descYearKeys = Object.keys(groupedByYear).sort((a, b) => +b - +a);
---

<PageLayout meta={meta}>
  <div class="sm:h-[400px] mt-6 sm:mt-16">
    <section class="group/total sm:border-l sm:border-solid sm:border-neutral-300 sm:ml-20" aria-label="Blog post list">
      {descYearKeys.map((yearKey, i) => (
        <>
          <div class="group/years sm:block flex flex-col mb-8 sm:mb-0 last-of-type:mb-0">
            <div class="mb-2 sm:mb-0 sm:absolute sm:-mx-20 sm:select-none rounded-md px-1 transition">
              <span class="group-hover/years:bg-neutral-100 dark:group-hover/years:bg-neutral-800 rounded-md p-1 transition font-bold text-xl">{yearKey}</span>
            </div>
            <ul class="group-hover/total:text-neutral-300 dark:group-hover/total:text-neutral-600 space-y-2 sm:ml-6 text-start">
              {groupedByYear[yearKey]?.map((p, j) => (
	        <li
                  class="animate-slideIn opacity-0"
                  style={{"--delay": ((i + 1) * 150) + ((j + 1) * 50) + "ms"}}>
	          <PostPreview post={p} />
	        </li>
              ))}
            </ul>
          </div>
        </>
      ))}

    </section>
  </div>
  <div class="w-fit mb-6 sm:mb-0 ms-auto me-auto flex justify-center">
    <Pagination {...paginationProps} />
  </div>
</PageLayout>

<style>
li {
  margin-top: 0.35rem !important;
}
</style>
