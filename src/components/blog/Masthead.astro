---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../FormattedDate.astro";
import '@fontsource/alice';

interface Props {
  content: CollectionEntry<"post">;
}

const {
  content: { data, render },
} = Astro.props;

const { remarkPluginFrontmatter } = await render();

const dateTimeOptions: Intl.DateTimeFormatOptions = {
  month: "short",
};
---

{data.coverImage && (<div class="aspect-[16/9] mb-6">
  <Image
    alt={data.coverImage.alt}
    class="object-cover"
    fetchpriority="high"
    loading="eager"
    src={data.coverImage.src}
  />
</div>)}
{data.draft ? <span class="text-xs sm:text-sm text-textColorFaded">(Draft)</span> : null}
<h1 class="title font-semibold text-lg sm:text-xl mb-2 sm:mb-2">
  {data.title}
</h1>
<div class="flex flex-wrap items-center gap-x-3 gap-y-2">
  <p class="text-xs sm:text-sm text-textColorFaded">
    <FormattedDate date={data.publishDate} dateTimeOptions={dateTimeOptions} />
    /{" "}
    {remarkPluginFrontmatter.minutesRead}
  </p>
  {data.updatedDate && (<span class="hidden sm:block rounded bg-neutral-200 -mb-0.5 sm:pt-0.5 dark:bg-neutral-800 text-textColor dark:text-neutral-400 text-xs px-2 sm:py-0.5">
    Updated:<FormattedDate class="ms-1" date={data.updatedDate} dateTimeOptions={dateTimeOptions} />
  </span>)}
</div>
