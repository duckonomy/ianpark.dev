---
import type { CollectionEntry } from "astro:content";
import { getPostSortDate } from "@/data/post";
import type { HTMLTag, Polymorphic } from "astro/types";
import FormattedDate from "../FormattedDate.astro";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<"post">;
	withDesc?: boolean;
};

const { as: Tag = "div", post, withDesc = false } = Astro.props;
const postDate = getPostSortDate(post);
const dateOptions: Intl.DateTimeFormatOptions = {
  day: "2-digit",
  month: "2-digit",
}
---
<div class="group/item hover:text-neutral-900 dark:hover:text-neutral-100 hover:bg-neutral-100 dark:hover:bg-neutral-800 px-2 py-0.5 rounded-md transition w-full sm:w-fit flex flex-row justify-between sm:justify-normal sm:flex-wrap sm:gap-2">
  <Tag>
    {post.data.draft && <span class="text-red-500 dark:font-bold">(Draft) </span>}
    <a class="hover:underline decoration-slate-400 text-base sm:text-base font-normal dark:font-medium" data-astro-prefetch href={`/posts/${post.slug}/`}>
      {post.data.title}
    </a>
  </Tag>

  <div class="flex">
    {withDesc && <q class="line-clamp-3 italic">{post.data.description}</q>}
    <span class="transition group-hover/total:text-neutral-300 dark:group-hover/item:text-gray-500 group-hover/item:text-gray-500 dark:group-hover/total:text-neutral-600 mt-[6px] sm:mt-0 text-base sm:text-base sm:m-auto sm:items-center text-textColorMoreFaded">
      <FormattedDate date={postDate} dateTimeOptions={dateOptions}/>
    </span>
  </div>
</div>
