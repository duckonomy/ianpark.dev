---
import type { CollectionEntry } from "astro:content";
import { getPostSortDate } from "@/data/post";
import type { HTMLTag, Polymorphic } from "astro/types";
import FormattedDate from "../FormattedDate.astro";
import { getLangFromUrl, useTranslatedPath } from "@/i18n/utils";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<"post">;
};

const { as: Tag = "div", post } = Astro.props;
const postDate = getPostSortDate(post);
const dateOptions: Intl.DateTimeFormatOptions = {
	day: "2-digit",
	month: "2-digit",
};
const lang = getLangFromUrl(Astro.url) || "en";
const translatePath = useTranslatedPath(lang);

const [, ...slugParts] = post.id.split("/");
const slug = slugParts.join("/");

const postUrl = translatePath("/posts/" + slug, lang);
---

<Tag data-tags={JSON.stringify(post.data.tags)}>
	<a
		href={postUrl}
		data-astro-prefetch
		class="block w-full rounded-md py-0.5 hover:bg-muted sm:px-2"
	>
		<div class="flex w-full flex-row justify-between sm:justify-between sm:gap-2">
			<div class="flex-1">
				<div class="inline-block">
					<span class="line-clamp-1 font-serif text-base dark:font-medium sm:text-base">
						{post.data.draft && <span class="opacity-60 dark:font-bold">(draft)</span>}
						<span class="text-accent-foreground">
							{post.data.title}
						</span>
					</span>
				</div>
				<span class="line-clamp-1 text-sm text-muted-foreground">
					{post.data.description}
				</span>
			</div>
			<div class="flex items-center">
				<span class="text-sm text-faded-foreground sm:m-auto sm:items-center sm:text-sm">
					<FormattedDate date={postDate} dateTimeOptions={dateOptions} />
				</span>
			</div>
		</div>
	</a>
</Tag>
