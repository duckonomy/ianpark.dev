---
import { type CollectionEntry, render } from "astro:content";
import BaseLayout from "@/layouts/Base.astro";
import Masthead from "@/components/blog/Masthead.astro";
import TableOfContents from "@/components/TOC";

interface Props {
	post: CollectionEntry<"post">;
}

const { post } = Astro.props;
const {
	data: { description, publishDate, title, updatedDate },
} = post;

const { headings, remarkPluginFrontmatter } = await render(post);
const type = "post";
const articleDate = updatedDate?.toISOString() ?? publishDate.toISOString();
const readingTime: string = remarkPluginFrontmatter.readingTime;
---

<BaseLayout meta={{ articleDate, description, title, type }}>
	{!!headings.length && <TableOfContents client:load headings={headings} />}
	<div class="post-content mb-16 mt-6 sm:mt-16 lg:flex">
		<article class="mx-0 flex-grow text-pretty break-words sm:mx-0 sm:w-full" data-pagefind-body>
			<div id="blog-hero" class="mb-8 sm:mb-0">
				<Masthead content={post} readingTime={readingTime} />
			</div>
			<div class="prose prose-baseProse leading-7 sm:leading-7">
				<slot />
			</div>
		</article>
	</div>
</BaseLayout>

<style is:global>
	.anchor-link {
		display: inline-flex; /* Changed from inline-block */
		align-items: center; /* Added for vertical centering */
		margin-left: 0.25rem;
		text-decoration-line: none;
		opacity: 0;
		transition: 0.2s;
		@apply text-muted-foreground;
	}

	.anchor:hover .anchor-link {
		opacity: 1;
	}

	.anchor-link svg {
		height: 0.7rem;
		width: 0.7rem;
	}

	/* Remove header for footnotes */
	#footnote-label {
		display: none;
	}
</style>
